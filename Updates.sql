					-- CONTACTO--


-- Editar Direccion (UPDATE) --
Delimiter //
CREATE PROCEDURE editarDireccionE (direcE VARCHAR(45))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE contacto SET direccionEmpresa = direcE;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar telefono (UPDATE) --
Delimiter //
CREATE PROCEDURE editarTelefonoE (telefE VARCHAR(15))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE contacto SET telefonoEmpresa = telefE;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar celular (UPDATE) --
Delimiter //
CREATE PROCEDURE editarCelularE (CelE VARCHAR(15))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE contacto SET celularEmpresa = CelE;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar correo (UPDATE) --
Delimiter //
CREATE PROCEDURE editarCorreoE (CorrE VARCHAR(45))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE contacto SET correoEmpresa = CorrE;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //


					-- PRODUCTO--


-- Editar nombre (UPDATE) --
Delimiter //
CREATE PROCEDURE editarNombreP (idP INT, nomP VARCHAR(45))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE producto SET nombreProducto = nomP WHERE idProducto = idP;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar descripcion (UPDATE) --
Delimiter //
CREATE PROCEDURE editarDescripcionP (idP INT, desP MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE producto SET descripcionProducto = desP WHERE idProducto = idP;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar foto (UPDATE) --
Delimiter //
CREATE PROCEDURE editarFotoeP (idP INT, FotoP LONGBLOB)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE producto SET fotoProducto = FotoP WHERE idProducto = idP;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //


					-- INFORMACIÓN--


-- Editar misión (UPDATE) --
Delimiter //
CREATE PROCEDURE editarMision (mis MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE informacion SET mision = mis;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar visión (UPDATE) --
Delimiter //
CREATE PROCEDURE editarVision (vis MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE informacion SET vision = vis;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar valores (UPDATE) --
Delimiter //
CREATE PROCEDURE editarValores (val MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE informacion SET valores = val;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar slogan (UPDATE) --
Delimiter //
CREATE PROCEDURE editarSlogan (slog MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE informacion SET slogan = slog;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //


					-- RECETA--


-- Editar titulo (UPDATE) --
Delimiter //
CREATE PROCEDURE editarTituloR (idR INT, titR VARCHAR(60))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET tituloReceta = titR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar resumen (UPDATE) --
Delimiter //
CREATE PROCEDURE editarResumenR (idR INT, resR VARCHAR(140))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET resumenReceta = resR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar ingredientes (UPDATE) --
Delimiter //
CREATE PROCEDURE editarIngredientesR (idR INT, ingR MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET ingredientes = ingR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar pasos (UPDATE) --
Delimiter //
CREATE PROCEDURE editarPasosR (idR INT, pasR MEDIUMTEXT)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET pasos = pasR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar Fecha (UPDATE) --
Delimiter //
CREATE PROCEDURE editarFechaR (idR INT, fecR DATETIME)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET fechaReceta = fecR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar autor (UPDATE) --
Delimiter //
CREATE PROCEDURE editarAutorR (idR INT, autR VARCHAR(45))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET autorReceta = autR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar foto (UPDATE) --
Delimiter //
CREATE PROCEDURE editarFotoR (idR INT, fotR LONGBLOB)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE receta SET fotoReceta = fotR WHERE idReceta = idR;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //


					-- NOTICIA--


-- Editar titulo (UPDATE) --
Delimiter //
CREATE PROCEDURE editarTituloN (idN INT, titN VARCHAR(60))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE noticia SET tituloNoticia = titN WHERE idNoticia = idN;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar resumen (UPDATE) --
Delimiter //
CREATE PROCEDURE editarResumenN (idN INT, resN VARCHAR(140))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE noticia SET resumenNoticia = resN WHERE idNoticia = idN;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar foto (UPDATE) --
Delimiter //
CREATE PROCEDURE editarFotoN (idN INT, fotN LONGBLOB)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE noticia SET fotoNoticia = fotN WHERE idNoticia = idN;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar fecha (UPDATE) --
Delimiter //
CREATE PROCEDURE editarFechaN (idN INT, fecN DATETIME)
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE noticia SET fechaNoticia = fecN WHERE idNoticia = idN;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //

-- Editar tipo (UPDATE) --
Delimiter //
CREATE PROCEDURE editarTipoN (idN INT, tipN INT(1))
    DETERMINISTIC
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
    DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN
	SELECT 1 AS ERROR;
	ROLLBACK;
	END;
	START TRANSACTION;
		UPDATE noticia SET tipoNoticia = tipN WHERE idNoticia = idN;					-- INTRUCCIÓN
    COMMIT;
	SELECT 0 AS ERROR;
    ROLLBACK;
END //